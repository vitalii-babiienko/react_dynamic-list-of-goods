{"version":3,"sources":["GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","goods","map","id","name","color","style","getAll","fetch","then","response","json","get5First","sort","prevName","curName","localeCompare","slice","getRedGoods","filter","good","App","useState","setGoods","setGoodsFromServer","getGoods","newGoods","catch","error","Error","className","type","onClick","length","ReactDOM","render","document","getElementById"],"mappings":"8NAOaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,6BACGA,EAAMC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,MAAb,OACT,oBAEE,UAAQ,OACRC,MAAO,CAAED,SAHX,SAKGD,GAJID,S,OCNN,SAASI,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAGxB,IAAMC,EAAY,WACvB,OAAOL,IACJE,MAAK,SAAAR,GAAK,OACT,YAAIA,GAAOY,MAAK,kBAASC,EAAT,EAAGV,KAA0BW,EAA7B,EAAuBX,KAAvB,OACdU,EAASE,cAAcD,MAEtBE,MAAM,EAAG,OAILC,EAAc,WACzB,OAAOX,IACJE,MAAK,SAAAR,GAAK,OACTA,EAAMkB,QAAO,SAAAC,GAAI,MAAmB,QAAfA,EAAKf,aCdnBgB,EAAgB,WAC3B,MAA0BC,mBAAiB,IAA3C,mBAAOrB,EAAP,KAAcsB,EAAd,KAEMC,EAAqB,SAACC,GAC1BA,IACGhB,MAAK,SAAAiB,GAAQ,OAAIH,EAASG,MAC1BC,OAAM,SAAAC,GACL,MAAM,IAAIC,MAAMD,OAItB,OACE,sBAAKE,UAAU,MAAf,UACE,uDAEA,wBACEC,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAMR,EAAmBjB,IAHpC,4BAQA,wBACEwB,KAAK,SACL,UAAQ,oBACRC,QAAS,kBAAMR,EAAmBZ,IAHpC,gCAQA,wBACEmB,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAMR,EAAmBN,IAHpC,4BAQCjB,EAAMgC,OAAS,GACd,cAAC,EAAD,CAAWhC,MAAOA,QC9C1BiC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a441d8a3.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(({ id, name, color }) => (\n      <li\n        key={id}\n        data-cy=\"good\"\n        style={{ color }}\n      >\n        {name}\n      </li>\n    ))}\n  </ul>\n);\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => response.json());\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => (\n      [...goods].sort(({ name: prevName }, { name: curName }) => (\n        prevName.localeCompare(curName)\n      ))\n        .slice(0, 5)\n    ));\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => (\n      goods.filter(good => good.color === 'red')\n    ));\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { GoodsList } from './GoodsList';\n\nimport { getAll, get5First, getRedGoods } from './api/goods';\nimport { Good } from './types/Good';\n\ntype GetGoodsCallback = () => Promise<Good[]>;\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n\n  const setGoodsFromServer = (getGoods: GetGoodsCallback) => {\n    getGoods()\n      .then(newGoods => setGoods(newGoods))\n      .catch(error => {\n        throw new Error(error);\n      });\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of Goods</h1>\n\n      <button\n        type=\"button\"\n        data-cy=\"all-button\"\n        onClick={() => setGoodsFromServer(getAll)}\n      >\n        Load all goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"first-five-button\"\n        onClick={() => setGoodsFromServer(get5First)}\n      >\n        Load 5 first goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"red-button\"\n        onClick={() => setGoodsFromServer(getRedGoods)}\n      >\n        Load red goods\n      </button>\n\n      {goods.length > 0 && (\n        <GoodsList goods={goods} />\n      )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}